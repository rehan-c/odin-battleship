* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
}

:root {
    --game-width: 300px;
}

.header {
    text-align: center;
    margin-bottom: 2rem;
}

.header h1 {
    font-size: 2.5rem;
    line-height: 75px;
}

.hover {
    cursor: pointer;
}

.ship-val {
    position: absolute;
    left: 10px;
}

.gameboards-container {
    display: flex;
    justify-content: center;
}

.gameboard {
    width: var(--game-width);
    height: var(--game-width);
    border: 1px solid black;
    display: inline-block;
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(10, 1fr);
}

.square {
    border: 1px solid black;
    position: relative;
}

.player-board {
    margin-right: 1rem;
}

.computer-board {
    margin-left: 1rem;
}

.intro-screen {
    position: absolute;
    background-color: black;
    color: white;
    width: 100vw;
    height: 100vh;
    text-align: center;
    display: block;
}

.intro-screen h1 {
    position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
}

nav.intro-sidebar {
    position: absolute;
    width: 250px;
    border: 1px solid black;
    height: 100vh;
    top: 0;
    background:  #fff;
    padding: 10px;
    text-align: center;
    left: 0px;
    transition: left 1s ease;
    z-index: 1;
}

nav.intro-sidebar ul {
    margin-top: 3rem;
}

nav.intro-sidebar li {
    padding-bottom: 2rem;
}

.hide-nav {
    left: -250px !important;
}

.carrier, .battleship, .destroyer, .patrol {
    display: grid;
    width: calc(var(--square-width) * 5);
    margin: auto;
    height: var(--square-width);
    grid-template-rows: repeat(1, 1fr);
    grid-template-columns: repeat(5, 1fr);
}

.draggable {
    cursor: pointer;
}

.dragging  {
    background-color: #d3d3d3;
}

.battleship {
    width: calc(var(--square-width) * 4);
    grid-template-columns: repeat(4, 1fr);
}

.destroyer {
    width: calc(var(--square-width) * 3);
    grid-template-columns: repeat(4, 1fr);
}

.patrol {
    width: calc(var(--square-width) * 2);
    grid-template-columns: repeat(2, 1fr);
}

.square-hover {
    background-color: #2e67f8;
}

.square-ship {
    background-color: #eb212e;
}

.computer-square.square-ship {
    background-color: white;
}

.output-field {
    border: 1px solid black;
    width: 50%;
    margin: 0 auto 1rem;
    text-align: center;
}

h2.output-message {
    animation: fadeIn 2s;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

.hit-square, .miss-square {
    background-color: blue;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
}

.miss-square {
    background-color: black;
}

.end-game-screen {
    animation: fadeIn 2s;
    position: absolute;
    width: 50%;
    height: 30%;
    background-color: white;
    border: 1px solid black;
    border-radius: 0.25rem;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.25);
    transform: translateX(-50%);
    left: 50%;
    top: 15%;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

.end-game-screen .play-again-btn {
    border: 1px solid black;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.25);
    padding: 15px;
    font-size: 20px;
    cursor: pointer;
}

.end-game-screen .play-again-btn:active {
    box-shadow: none;
    background-color: white;
}

.multiplier {
    position: fixed;
    right: 5%;
    top: 5%;
    border: 1px solid black;
    padding: 10px;
    cursor: pointer;
    z-index: 4;
    transition: background-color 1s ease;
}

.mutliplier:hover {
    background-color: lightpink;
}

.multiplier h1 {
    color: black !important;
}

.multiplier .hidden {
    position: absolute;
    top: 100%;
    left: 0%;
    border: 1px solid red;
    text-align: center;
    z-index: 5;
    background: white;
    opacity: 0;
    transition: opacity 1s ease;
    cursor: default;
}

@media only screen and (min-width: 300px) {
    :root {
        --game-width: 250px;
        --square-width: calc(var(--game-width) / 10);
    }
}

@media only screen and (min-width: 1000px) {
    :root {
        --game-width: 300px;
        --square-width: calc(var(--game-width) / 10);
    }
}